{"ast":null,"code":"import _regeneratorRuntime from\"/Users/erickjaimez/Desktop/ECO-APP/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/erickjaimez/Desktop/ECO-APP/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/erickjaimez/Desktop/ECO-APP/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/erickjaimez/Desktop/ECO-APP/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import faker from'faker';import{Icon}from'@iconify/react';import{formatDistance}from'date-fns';import{Link as RouterLink}from'react-router-dom';import arrowIosForwardFill from'@iconify/icons-eva/arrow-ios-forward-fill';// material\nimport{Box,Stack,Link,Card,Button,Divider,Typography,CardHeader}from'@mui/material';// utils\nimport{mockImgCover}from'../../../utils/mockImages';//\nimport Scrollbar from'../../Scrollbar';import{useEffect,useState}from'react';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NEWS=_toConsumableArray(Array(5)).map(function(_,index){var setIndex=index+1;return{title:faker.name.title(),description:faker.lorem.paragraphs(),image:mockImgCover(setIndex),postedAt:faker.date.soon()};});// ----------------------------------------------------------------------\nfunction BookItem(_ref){var book=_ref.book;var book_image=book.book_image,title=book.title,description=book.description,updated_date=book.updated_date,author=book.author;//Extract this information from object\n//const { image, title, description, postedAt } = book;\nreturn/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Box,{component:\"img\",alt:title,src:book_image,sx:{width:48,height:48,borderRadius:1.5}}),/*#__PURE__*/_jsxs(Box,{sx:{minWidth:240},children:[/*#__PURE__*/_jsx(Link,{to:\"#\",color:\"inherit\",underline:\"hover\",component:RouterLink,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",noWrap:true,children:title})}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'text.secondary'},noWrap:true,children:description})]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{pr:3,flexShrink:0,color:'text.secondary'},children:author})]});}//TODO: Pull the book list from the props. For now, we'll use the NEWS array as the inputs\n//const AppBookSeachList = () => {\nexport default function AppBookSearchList(){//const [sliceFactor, setFactor] = useEffect(1);//We're going to slice the array passed by this factor on each page\n/*const [currentList, setList] = useState([{\n    author: \"Colleen Hoover\",\n    title: \"IT ENDS WITH US\",\n    book_image: \"https://storage.googleapis.com/du-prd/books/images/9781501110375.jpg\",\n    description: \"A battered wife raised in a violent home attempts to halt the cycle of abuse.\",\n    updated_date: \"2022-01-05 23:21:55\"\n\n   }]); //This will be the list of items displayed in the book search section*/var _useState=useState([]),_useState2=_slicedToArray(_useState,2),currentList=_useState2[0],setList=_useState2[1];var _useState3=useState(\"mEfQxnocskwDVVKNrJDNDIWmUHn13VBZ\"),_useState4=_slicedToArray(_useState3,2),NYT_Key=_useState4[0],setNYT=_useState4[1];//API key for NYT API (Temporary, will move to AWS secret manager)\nvar _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),page=_useState6[0],updatePage=_useState6[1];//We are going to display the first list at the beginning\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),queryResult=_useState8[0],setResult=_useState8[1];//This is where we will store all info from NYT\nvar _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),listTitle=_useState10[0],setTitle=_useState10[1];useEffect(function(){//console.log(\"This is the props passed to the search component: \\n\", bookList[0]);\n//setList(bookList[0].books);\n//console.log(\"We set the list to \", bookList[0].books.length);\nvar callNYT=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var query,res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:query=\"https://api.nytimes.com/svc/books/v3/lists/overview.json?api-key=\".concat(NYT_Key);console.log(\"The NYT query in this component is \",query);_context.next=4;return fetch(query);case 4:res=_context.sent;_context.next=7;return res.json();case 7:data=_context.sent;console.log(\"This is the data from the NYT API:\\n \",data);setList(data.results.lists[0].books);setTitle(data.results.lists[0].list_name);//Set the name for the component\nsetResult(data.results.lists);//Copy the whole object with the different lists, each will be a new page\nconsole.log(\"Loaded the information from NYT. Moving forward\");case 13:case\"end\":return _context.stop();}}},_callee);}));return function callNYT(){return _ref2.apply(this,arguments);};}();if(currentList.length==0){callNYT();//Call the function to call NYTAPI\n}//Only call the API if the list is empty\n},[currentList]);var changePage=function changePage(e){e.preventDefault();console.log(\"Changing page\");var newPage=page+1;//Update new page\nif(newPage>=queryResult.length){console.log(\"No more pages left\");return;}else{console.log(\"Updating the page to \",queryResult[newPage]);setList(queryResult[newPage].books);//Update the current list to show the next list from the results\nsetTitle(queryResult[newPage].list_name);//Update the title shown on the list component\nupdatePage(newPage);//Update the page to the new one we are seeing\nreturn;}};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"New York Times: \".concat(listTitle,\" List\")}),/*#__PURE__*/_jsx(Scrollbar,{children:/*#__PURE__*/_jsx(Stack,{spacing:3,sx:{p:3,pr:0},children:currentList.map(function(item){return/*#__PURE__*/_jsx(BookItem,{book:item},item.title);})})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Box,{sx:{p:2,textAlign:'right'},children:/*#__PURE__*/_jsx(Button,{to:\"#\",size:\"small\",color:\"inherit\",component:RouterLink,endIcon:/*#__PURE__*/_jsx(Icon,{icon:arrowIosForwardFill}),onClick:changePage,children:\"Next Page\"})})]});}//export default AppBookSeachList;\n/*\n      <Scrollbar>\n        <Stack spacing={3} sx={{ p: 3, pr: 0 }}>\n          {NEWS.map((news) => (\n            <BookItem key={news.title} news={news} />\n          ))}\n        </Stack>\n      </Scrollbar>\n\n\n\n\n      function BookItem({ news }) {\n  const { image, title, description, postedAt } = news;\n\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Box\n        component=\"img\"\n        alt={title}\n        src={image}\n        sx={{ width: 48, height: 48, borderRadius: 1.5 }}\n      />\n      <Box sx={{ minWidth: 240 }}>\n        <Link to=\"#\" color=\"inherit\" underline=\"hover\" component={RouterLink}>\n          <Typography variant=\"subtitle2\" noWrap>\n            {title}\n          </Typography>\n        </Link>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n          {description}\n        </Typography>\n      </Box>\n      <Typography variant=\"caption\" sx={{ pr: 3, flexShrink: 0, color: 'text.secondary' }}>\n        {formatDistance(postedAt, new Date())}\n      </Typography>\n    </Stack>\n  );\n}\n\n*/","map":{"version":3,"sources":["/Users/erickjaimez/Desktop/ECO-APP/frontend/src/components/_dashboard/app/AppBookSearchList.js"],"names":["faker","Icon","formatDistance","Link","RouterLink","arrowIosForwardFill","Box","Stack","Card","Button","Divider","Typography","CardHeader","mockImgCover","Scrollbar","useEffect","useState","NEWS","Array","map","_","index","setIndex","title","name","description","lorem","paragraphs","image","postedAt","date","soon","BookItem","book","book_image","updated_date","author","width","height","borderRadius","minWidth","color","pr","flexShrink","AppBookSearchList","currentList","setList","NYT_Key","setNYT","page","updatePage","queryResult","setResult","listTitle","setTitle","callNYT","query","console","log","fetch","res","json","data","results","lists","books","list_name","length","changePage","e","preventDefault","newPage","p","item","textAlign"],"mappings":"6oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,KAAqB,gBAArB,CACA,OAASC,cAAT,KAA+B,UAA/B,CACA,OAASC,IAAI,GAAIC,CAAAA,UAAjB,KAAmC,kBAAnC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,2CAAhC,CACA;AACA,OAASC,GAAT,CAAcC,KAAd,CAAqBJ,IAArB,CAA2BK,IAA3B,CAAiCC,MAAjC,CAAyCC,OAAzC,CAAkDC,UAAlD,CAA8DC,UAA9D,KAAgF,eAAhF,CACA;AACA,OAASC,YAAT,KAA6B,2BAA7B,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,OAASC,SAAT,CAAmBC,QAAnB,KAAmC,OAAnC,CAEA;wFAEA,GAAMC,CAAAA,IAAI,CAAG,mBAAIC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,SAACC,CAAD,CAAIC,KAAJ,CAAc,CAC3C,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAAG,CAAzB,CACA,MAAO,CACLE,KAAK,CAAEvB,KAAK,CAACwB,IAAN,CAAWD,KAAX,EADF,CAELE,WAAW,CAAEzB,KAAK,CAAC0B,KAAN,CAAYC,UAAZ,EAFR,CAGLC,KAAK,CAAEf,YAAY,CAACS,QAAD,CAHd,CAILO,QAAQ,CAAE7B,KAAK,CAAC8B,IAAN,CAAWC,IAAX,EAJL,CAAP,CAMD,CARY,CAAb,CAUA;AAGA,QAASC,CAAAA,QAAT,MAA4B,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CAC1B,GAAQC,CAAAA,UAAR,CAAiED,IAAjE,CAAQC,UAAR,CAAoBX,KAApB,CAAiEU,IAAjE,CAAoBV,KAApB,CAA2BE,WAA3B,CAAiEQ,IAAjE,CAA2BR,WAA3B,CAAwCU,YAAxC,CAAiEF,IAAjE,CAAwCE,YAAxC,CAAuDC,MAAvD,CAAiEH,IAAjE,CAAuDG,MAAvD,CAAuE;AACvE;AAEA,mBACE,MAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,UAAU,CAAC,QAAlC,CAA2C,OAAO,CAAE,CAApD,wBACE,KAAC,GAAD,EACE,SAAS,CAAC,KADZ,CAEE,GAAG,CAAEb,KAFP,CAGE,GAAG,CAAEW,UAHP,CAIE,EAAE,CAAE,CAAEG,KAAK,CAAE,EAAT,CAAaC,MAAM,CAAE,EAArB,CAAyBC,YAAY,CAAE,GAAvC,CAJN,EADF,cAOE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAAT,wBACE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,KAAK,CAAC,SAAnB,CAA6B,SAAS,CAAC,OAAvC,CAA+C,SAAS,CAAEpC,UAA1D,uBACE,KAAC,UAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,MAAM,KAAtC,UACGmB,KADH,EADF,EADF,cAME,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,EAAE,CAAE,CAAEkB,KAAK,CAAE,gBAAT,CAAhC,CAA6D,MAAM,KAAnE,UACGhB,WADH,EANF,GAPF,cAiBE,KAAC,UAAD,EAAY,OAAO,CAAC,SAApB,CAA8B,EAAE,CAAE,CAAEiB,EAAE,CAAE,CAAN,CAASC,UAAU,CAAE,CAArB,CAAwBF,KAAK,CAAE,gBAA/B,CAAlC,UAEGL,MAFH,EAjBF,GADF,CAwBD,CAED;AACA;AACA,cAAe,SAASQ,CAAAA,iBAAT,EAA6B,CAC1C;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA,+EACG,cAA+B5B,QAAQ,CAAC,EAAD,CAAvC,wCAAO6B,WAAP,eAAoBC,OAApB,eACA,eAA0B9B,QAAQ,CAAC,kCAAD,CAAlC,yCAAO+B,OAAP,eAAgBC,MAAhB,eAAuE;AACvE,eAA2BhC,QAAQ,CAAC,CAAD,CAAnC,yCAAOiC,IAAP,eAAaC,UAAb,eAAuC;AACvC,eAAiClC,QAAQ,CAAC,EAAD,CAAzC,yCAAOmC,WAAP,eAAoBC,SAApB,eAA8C;AAC9C,eAA8BpC,QAAQ,CAAC,EAAD,CAAtC,0CAAOqC,SAAP,gBAAkBC,QAAlB,gBACDvC,SAAS,CAAC,UAAK,CACb;AACA;AAEA;AACA,GAAMwC,CAAAA,OAAO,2FAAG,sJACRC,KADQ,4EACoET,OADpE,EAEdU,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAmDF,KAAnD,EAFc,sBAGIG,CAAAA,KAAK,CAACH,KAAD,CAHT,QAGRI,GAHQ,qCAIKA,CAAAA,GAAG,CAACC,IAAJ,EAJL,QAIRC,IAJQ,eAKdL,OAAO,CAACC,GAAR,CAAY,uCAAZ,CAAqDI,IAArD,EACAhB,OAAO,CAACgB,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,KAAvB,CAAP,CACAX,QAAQ,CAACQ,IAAI,CAACC,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAsBE,SAAvB,CAAR,CAA0C;AAC1Cd,SAAS,CAACU,IAAI,CAACC,OAAL,CAAaC,KAAd,CAAT,CAA8B;AAC9BP,OAAO,CAACC,GAAR,CAAY,iDAAZ,EATc,uDAAH,kBAAPH,CAAAA,OAAO,2CAAb,CAYA,GAAIV,WAAW,CAACsB,MAAZ,EAAsB,CAA1B,CACA,CACEZ,OAAO,GAAG;AACX;AAGF,CAvBQ,CAuBP,CAACV,WAAD,CAvBO,CAAT,CAyBA,GAAMuB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,CAAC,CAAI,CACtBA,CAAC,CAACC,cAAF,GACAb,OAAO,CAACC,GAAR,CAAY,eAAZ,EACA,GAAIa,CAAAA,OAAO,CAAGtB,IAAI,CAAG,CAArB,CAAwB;AACxB,GAAIsB,OAAO,EAAIpB,WAAW,CAACgB,MAA3B,CAAkC,CAChCV,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACA,OACD,CAHD,IAII,CACFD,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCP,WAAW,CAACoB,OAAD,CAAhD,EACAzB,OAAO,CAACK,WAAW,CAACoB,OAAD,CAAX,CAAqBN,KAAtB,CAAP,CAAqC;AACrCX,QAAQ,CAACH,WAAW,CAACoB,OAAD,CAAX,CAAqBL,SAAtB,CAAR,CAAyC;AACzChB,UAAU,CAACqB,OAAD,CAAV,CAAoB;AACpB,OAED,CACF,CAhBD,CAkBA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,EAAY,KAAK,2BAAsBlB,SAAtB,SAAjB,EADF,cAGE,KAAC,SAAD,wBACE,KAAC,KAAD,EAAO,OAAO,CAAE,CAAhB,CAAmB,EAAE,CAAE,CAAEmB,CAAC,CAAE,CAAL,CAAQ9B,EAAE,CAAE,CAAZ,CAAvB,UACGG,WAAW,CAAC1B,GAAZ,CAAgB,SAACsD,IAAD,qBACf,KAAC,QAAD,EAA2B,IAAI,CAAEA,IAAjC,EAAeA,IAAI,CAAClD,KAApB,CADe,EAAhB,CADH,EADF,EAHF,cAWE,KAAC,OAAD,IAXF,cAaE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEiD,CAAC,CAAE,CAAL,CAAQE,SAAS,CAAE,OAAnB,CAAT,uBACE,KAAC,MAAD,EACE,EAAE,CAAC,GADL,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAC,SAHR,CAIE,SAAS,CAAEtE,UAJb,CAKE,OAAO,cAAE,KAAC,IAAD,EAAM,IAAI,CAAEC,mBAAZ,EALX,CAME,OAAO,CAAI+D,UANb,uBADF,EAbF,GADF,CA4BD,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import faker from 'faker';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { formatDistance } from 'date-fns';\nimport { Link as RouterLink } from 'react-router-dom';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { Box, Stack, Link, Card, Button, Divider, Typography, CardHeader } from '@mui/material';\n// utils\nimport { mockImgCover } from '../../../utils/mockImages';\n//\nimport Scrollbar from '../../Scrollbar';\nimport { useEffect,useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nconst NEWS = [...Array(5)].map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    title: faker.name.title(),\n    description: faker.lorem.paragraphs(),\n    image: mockImgCover(setIndex),\n    postedAt: faker.date.soon()\n  };\n});\n\n// ----------------------------------------------------------------------\n\n\nfunction BookItem({ book }) {\n  const { book_image, title, description, updated_date , author} = book; //Extract this information from object\n  //const { image, title, description, postedAt } = book;\n\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Box\n        component=\"img\"\n        alt={title}\n        src={book_image}\n        sx={{ width: 48, height: 48, borderRadius: 1.5 }}\n      />\n      <Box sx={{ minWidth: 240 }}>\n        <Link to=\"#\" color=\"inherit\" underline=\"hover\" component={RouterLink}>\n          <Typography variant=\"subtitle2\" noWrap>\n            {title}\n          </Typography>\n        </Link>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n          {description}\n        </Typography>\n      </Box>\n      <Typography variant=\"caption\" sx={{ pr: 3, flexShrink: 0, color: 'text.secondary' }}>\n        {/* {formatDistance(updated_date, new Date())}*/}\n        {author}\n      </Typography>\n    </Stack>\n  );\n}\n\n//TODO: Pull the book list from the props. For now, we'll use the NEWS array as the inputs\n//const AppBookSeachList = () => {\nexport default function AppBookSearchList() {\n  //const [sliceFactor, setFactor] = useEffect(1);//We're going to slice the array passed by this factor on each page\n  /*const [currentList, setList] = useState([{\n    author: \"Colleen Hoover\",\n    title: \"IT ENDS WITH US\",\n    book_image: \"https://storage.googleapis.com/du-prd/books/images/9781501110375.jpg\",\n    description: \"A battered wife raised in a violent home attempts to halt the cycle of abuse.\",\n    updated_date: \"2022-01-05 23:21:55\"\n\n   }]); //This will be the list of items displayed in the book search section*/\n   const [currentList, setList] = useState([]);\n   const [NYT_Key, setNYT] = useState(\"mEfQxnocskwDVVKNrJDNDIWmUHn13VBZ\");//API key for NYT API (Temporary, will move to AWS secret manager)\n   const [page, updatePage] = useState(0);//We are going to display the first list at the beginning\n   const [queryResult, setResult] = useState([]);//This is where we will store all info from NYT\n   const [listTitle, setTitle] = useState(\"\")\n  useEffect(() =>{\n    //console.log(\"This is the props passed to the search component: \\n\", bookList[0]);\n    //setList(bookList[0].books);\n\n    //console.log(\"We set the list to \", bookList[0].books.length);\n    const callNYT = async () =>{\n      const query = `https://api.nytimes.com/svc/books/v3/lists/overview.json?api-key=${NYT_Key}`\n      console.log(\"The NYT query in this component is \", query);\n      const res = await fetch(query);\n      const data = await res.json();\n      console.log(\"This is the data from the NYT API:\\n \", data);\n      setList(data.results.lists[0].books);\n      setTitle(data.results.lists[0].list_name);//Set the name for the component\n      setResult(data.results.lists);//Copy the whole object with the different lists, each will be a new page\n      console.log(\"Loaded the information from NYT. Moving forward\")\n    };\n\n    if (currentList.length == 0)\n    {\n      callNYT();//Call the function to call NYTAPI\n    }//Only call the API if the list is empty\n\n\n  },[currentList]);\n\n  const changePage = e => {\n    e.preventDefault();\n    console.log(\"Changing page\");\n    var newPage = page + 1; //Update new page\n    if (newPage >= queryResult.length){\n      console.log(\"No more pages left\");\n      return;\n    }\n    else{\n      console.log(\"Updating the page to \", queryResult[newPage]);\n      setList(queryResult[newPage].books); //Update the current list to show the next list from the results\n      setTitle(queryResult[newPage].list_name);//Update the title shown on the list component\n      updatePage(newPage);//Update the page to the new one we are seeing\n      return;\n\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader title= {`New York Times: ${listTitle} List`} />\n\n      <Scrollbar>\n        <Stack spacing={3} sx={{ p: 3, pr: 0 }}>\n          {currentList.map((item) => (\n            <BookItem key={item.title} book={item} />\n          ))}\n        </Stack>\n      </Scrollbar>\n\n      <Divider />\n\n      <Box sx={{ p: 2, textAlign: 'right' }}>\n        <Button\n          to=\"#\"\n          size=\"small\"\n          color=\"inherit\"\n          component={RouterLink}\n          endIcon={<Icon icon={arrowIosForwardFill} />}\n          onClick = {changePage}\n        >\n          Next Page\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\n//export default AppBookSeachList;\n\n/*\n      <Scrollbar>\n        <Stack spacing={3} sx={{ p: 3, pr: 0 }}>\n          {NEWS.map((news) => (\n            <BookItem key={news.title} news={news} />\n          ))}\n        </Stack>\n      </Scrollbar>\n\n\n\n\n      function BookItem({ news }) {\n  const { image, title, description, postedAt } = news;\n\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n      <Box\n        component=\"img\"\n        alt={title}\n        src={image}\n        sx={{ width: 48, height: 48, borderRadius: 1.5 }}\n      />\n      <Box sx={{ minWidth: 240 }}>\n        <Link to=\"#\" color=\"inherit\" underline=\"hover\" component={RouterLink}>\n          <Typography variant=\"subtitle2\" noWrap>\n            {title}\n          </Typography>\n        </Link>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n          {description}\n        </Typography>\n      </Box>\n      <Typography variant=\"caption\" sx={{ pr: 3, flexShrink: 0, color: 'text.secondary' }}>\n        {formatDistance(postedAt, new Date())}\n      </Typography>\n    </Stack>\n  );\n}\n\n*/"]},"metadata":{},"sourceType":"module"}